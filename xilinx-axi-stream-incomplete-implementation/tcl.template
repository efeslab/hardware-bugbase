# Template dictionary
#  <key>          <example value>
# PROJNAME:         vivado_proj
# PROJPATH:         xilinx-axi-lite-incomplete-implementation
# SOURCES:          wrapper.v notask.v (' ' seperated)
# SV_SRCS:          withtask.v (list)
# TOP_MODULE:       xlnxdemo_wrapper
# ILA_TCL:          ila.tcl ('' if not needed)
create_project {{PROJNAME}} {{PROJPATH}}/{{PROJNAME}} -part xc7k325tffg900-2
set_property board_part xilinx.com:kc705:part0:1.6 [current_project]
add_files -norecurse { {{SOURCES}} }
{% for sv in SV_SRCS %}
set_property file_type SystemVerilog [get_files  {{sv}}]
{% endfor %}

{% if ILA_TCL != '' %}
source {{ILA_TCL}}
set_property generate_synth_checkpoint false [get_files {{PROJPATH}}/{{PROJNAME}}/{{PROJNAME}}.srcs/sources_1/ip/ila_0/ila_0.xci]
generate_target all [get_files {{PROJPATH}}/{{PROJNAME}}/{{PROJNAME}}.srcs/sources_1/ip/ila_0/ila_0.xci]
{% endif %}

# create block design
create_bd_design "design_1"

# add pcie
startgroup
create_bd_cell -type ip -vlnv xilinx.com:ip:xdma:4.1 xdma_0
apply_board_connection -board_interface "pci_express_x1" -ip_intf "xdma_0/pcie_mgt" -diagram "design_1" 
apply_board_connection -board_interface "pcie_perstn" -ip_intf "xdma_0/RST.sys_rst_n" -diagram "design_1" 
endgroup

# block automation
apply_bd_automation -rule xilinx.com:bd_rule:xdma -config { accel {1} auto_level {IP Level} axi_clk {Maximum Data Width} axi_intf {AXI Memory Mapped} bar_size {Disable} bypass_size {Disable} c2h {2} cache_size {128k} h2c {2} lane_width {X1} link_speed {5.0 GT/s (PCIe Gen 2)}}  [get_bd_cells xdma_0]

# add user module
create_bd_cell -type module -reference {{TOP_MODULE}} {{TOP_MODULE}}_0

# add protocol checker
startgroup
create_bd_cell -type ip -vlnv xilinx.com:ip:axis_protocol_checker:2.0 axis_protocol_checker_0
endgroup

# connect xlnxstream to protocol checker
connect_bd_intf_net [get_bd_intf_pins {{TOP_MODULE}}_0/M_AXIS] [get_bd_intf_pins axis_protocol_checker_0/PC_AXIS]

# add LED
startgroup
create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_0
apply_board_connection -board_interface "led_8bits" -ip_intf "axi_gpio_0/GPIO" -diagram "design_1" 
endgroup

# connection signals
connect_bd_net [get_bd_pins axis_protocol_checker_0/pc_status] [get_bd_pins axi_gpio_0/s_axi_araddr]
connect_bd_net [get_bd_pins axis_protocol_checker_0/aclk] [get_bd_pins xdma_0/axi_aclk]
connect_bd_net [get_bd_pins xdma_0/axi_aclk] [get_bd_pins axi_gpio_0/s_axi_aclk]
connect_bd_net [get_bd_pins axis_protocol_checker_0/aresetn] [get_bd_pins xdma_0/axi_aresetn]
connect_bd_net [get_bd_pins xdma_0/axi_aresetn] [get_bd_pins axi_gpio_0/s_axi_aresetn]
connect_bd_net [get_bd_pins xdma_0/axi_aclk] [get_bd_pins {{TOP_MODULE}}_0/M_AXIS_ACLK]
connect_bd_net [get_bd_pins {{TOP_MODULE}}_0/M_AXIS_ARESETN] [get_bd_pins xdma_0/axi_aresetn]

# generate HDL products
set_property synth_checkpoint_mode None [get_files  {{PROJPATH}}/{{PROJNAME}}/{{PROJNAME}}.srcs/sources_1/bd/design_1/design_1.bd]
generate_target all [get_files  {{PROJPATH}}/{{PROJNAME}}/{{PROJNAME}}.srcs/sources_1/bd/design_1/design_1.bd]
export_ip_user_files -of_objects [get_files {{PROJPATH}}/{{PROJNAME}}/{{PROJNAME}}.srcs/sources_1/bd/design_1/design_1.bd] -no_script -sync -force -quiet

# create wrapper
make_wrapper -files [get_files {{PROJPATH}}/{{PROJNAME}}/{{PROJNAME}}.srcs/sources_1/bd/design_1/design_1.bd] -top
add_files -norecurse {{PROJPATH}}/{{PROJNAME}}/{{PROJNAME}}.gen/sources_1/bd/design_1/hdl/design_1_wrapper.v
set_property top design_1_wrapper [current_fileset]
update_compile_order -fileset sources_1

# implementation
synth_design
opt_design
place_design
route_design

# report util
report_utilization -hierarchical -file {{PROJPATH}}/{{PROJNAME}}/{{PROJNAME}}.util.rpt
exit
